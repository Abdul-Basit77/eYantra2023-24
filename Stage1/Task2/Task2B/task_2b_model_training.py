# -*- coding: utf-8 -*-
"""transfer_learning.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CWuZEVfJBcLJEsD8g5fwlao8Q7kHCr8U
"""

import tensorflow as tf
import os
import numpy as np
import matplotlib.pyplot as plt

from google.colab import drive
drive.mount("/content/drive")

Train_path="/content/drive/MyDrive/eyantra/task2b/training"

os.listdir(Train_path)

Total_images=tf.keras.utils.image_dataset_from_directory(Train_path,image_size=(224,224))

Scaled_Total_images=Total_images.map(lambda x,y:(x/255,y))
Scaled_image_iterator=Scaled_Total_images.as_numpy_iterator()
train_size = int(len(Scaled_Total_images)*.8)
val_size = int(len(Scaled_Total_images)*.2)
train = Scaled_Total_images.take(train_size)
test = Scaled_Total_images.skip(train_size).take(val_size)

feature_extracter_model="https://tfhub.dev/google/tf2-preview/mobilenet_v2/feature_vector/4"

import tensorflow_hub as hub
pretrained_model_without_top_layer=hub.KerasLayer(feature_extracter_model,input_shape=(224,224,3),trainable=False)

no_of_classes=5
model=tf.keras.Sequential([
    pretrained_model_without_top_layer,
    tf.keras.layers.Dense(no_of_classes,activation="softmax")
])
model.summary()

model.compile(optimizer="adam",loss=tf.keras.losses.SparseCategoricalCrossentropy(),metrics=["accuracy"])

model.fit(train,epochs=5)

model.evaluate(test)

model.save(os.path.join('/content/drive/MyDrive/eyantra/task2b/','CNNmodel_transfer_learning.h5'))

